import 'dart:async';
import 'dart:math';
import 'package:covid19/IconPack/ajayistic_icons_icons.dart';
import 'package:covid19/Widgets/countries.dart';
import 'package:firebase_admob/firebase_admob.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import "package:flutter_map/flutter_map.dart" as flutterMap;
import "package:latlong/latlong.dart" as latLng;
import "dart:convert";
import "package:http/http.dart" as http;
import 'package:google_maps_flutter/google_maps_flutter.dart';

class MapPage extends StatefulWidget {
  MapPage({Key key, this.title}) : super(key: key);

  final String title;

  @override
  _MapPageState createState() => _MapPageState();
}

class _MapPageState extends State<MapPage> {
  static const MobileAdTargetingInfo targetingInfo = MobileAdTargetingInfo(
    keywords: <String>['corona', 'covid19', 'health', 'shopping'],
    childDirected: false,
    designedForFamilies: false,
    gender: MobileAdGender.unknown,
  );

  InterstitialAd myInterstitial = InterstitialAd(
    adUnitId: 'ca-app-pub-8801428624940024/5592494769',
    targetingInfo: targetingInfo,
    listener: (MobileAdEvent event) {
      print("InterstitialAd event is $event");
    },
  );

  int total_cases = 0, recovered = 0, deaths = 0;
  bool isLoading = true, pinClicked = false;
  String countryName;
  List detailData = [];
  double lat = 0, long = 0;


  @override
  initState() {
    _getDetailedData();
    _getCovidData();
    myInterstitial
      ..load()
      ..show(
        anchorType: AnchorType.bottom,
        anchorOffset: 0.0,
        horizontalCenterOffset: 0.0,
      );
    
    super.initState();
  }

  @override
  void dispose() {
    myInterstitial.dispose();
    //animationController.dispose();
    super.dispose();
  }

  
  Completer<GoogleMapController> _controller = Completer();

  CameraPosition _cameraPos;

  Map<MarkerId, Marker> markers = <MarkerId, Marker>{};

  int generateIds() {
    var rng =  Random();
    var randomInt;
    randomInt = rng.nextInt(100);
    print(rng.nextInt(100));
    return randomInt;

  }

  void buildMarkers() {
    for (var i=0; i<detailData.length; i++) {
      var location = detailData[i];
                    var markerIdVal = generateIds();
                  final MarkerId markerId = MarkerId(markerIdVal.toString());
                    final Marker marker = Marker(
                  markerId: markerId,
                  position: LatLng(
                   location['lat'].toDouble(),
                   location['long'].toDouble(),
                  ),
                );
// you could do setState here when adding the markers to the Map
                setState(() {
                  markers[markerId] = marker;
                });
                  }
                  print("Length:: + ${markers.length}");
  }

  List<Marker> allMarkers = [
    Marker(
        markerId: MarkerId('1'),
        draggable: false,
        onTap: null,
        position: LatLng(20.5937, 78.9629),
        ),
    Marker(
        markerId: MarkerId('2'),
        draggable: false,
        onTap: null,
        position: LatLng(37.0902, 90.7129),
        )
  ];

  void _getCovidData() async {
    setState(() {
      isLoading = true;
    });
    String url = countryName == null
        ? "https://covid19.mathdro.id/api"
        : "https://covid19.mathdro.id/api/countries/$countryName";
    http.Response data = await http.get(url);
    dynamic coronaData = jsonDecode(data.body);

    setState(() {
      total_cases = coronaData["confirmed"]["value"];
      recovered = coronaData["recovered"]["value"];
      deaths = coronaData["deaths"]["value"];
      isLoading = false;
    });
  }

  void _getDetailedData() async {
    String url = countryName == null
        ? "https://covid19.mathdro.id/api/confirmed"
        : "https://covid19.mathdro.id/api/countries/$countryName/confirmed";
    http.Response data = await http.get(url);
    dynamic coronaDetail = jsonDecode(data.body);
    setState(() {
      detailData = coronaDetail;
    });
    for (var location in detailData) {
      
    }
  }

// Method to generate all the markers on map from detailData
  List<flutterMap.Marker> generateMarker() {
    List<flutterMap.Marker> marker = [];

    for (var location in detailData) {
      marker.add(
        flutterMap.Marker(
          width: 80.0,
          height: 40.0,
          point: new latLng.LatLng(
            location["lat"] != null ? location["lat"].toDouble() : 0,
            location["long"] != null ? location["long"].toDouble() : 0,
          ),
          builder: (context) => new Container(
            child: IconButton(
                icon: Icon(
                  Icons.brightness_1,
                  color: Color(0x99750000),
                ),
                onPressed: () {
                  setState(() {
                    pinClicked = true;
                    lat = location["lat"];
                    long = location["long"];
                  });
                }),
          ),
        ),
      );
    }
    return marker;
  }

  Widget showContainer() {
    print(lat.toString() + " " + long.toString());
    dynamic location = {};
    for (var country in detailData) {
      if (country["lat"] == lat && country["long"] == long) {
        location = country;
      }
    }
    // print(location);
    return Stack(
      children: <Widget>[
        Card(
          color: Color(0xfff2f2fa),
          elevation: 10.0,
          child: Container(
            width: 150.0,
            height: 100.0,
            padding: EdgeInsets.all(5.0),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.spaceAround,
              crossAxisAlignment: CrossAxisAlignment.stretch,
              children: <Widget>[
                location["provinceState"] != null
                    ? Text(
                        "City: ${location["provinceState"]}",
                        style: TextStyle(
                          color: Colors.black,
                          fontWeight: FontWeight.bold,
                        ),
                      )
                    : location["countryRegion"] != null
                        ? Text(
                            "Country: ${location["countryRegion"]}",
                            style: TextStyle(color: Colors.black),
                          )
                        : Text(''),
                location["confirmed"] != null
                    ? Text(
                        "Total Cases: ${location["confirmed"]}",
                        style: TextStyle(color: Colors.black),
                      )
                    : Text(''),
                location["recovered"] != null
                    ? Text(
                        "Recovered: ${location["recovered"]}",
                        style: TextStyle(color: Colors.black),
                      )
                    : Text(''),
                location["deaths"] != null
                    ? Text(
                        "Deaths: ${location["deaths"]}",
                        style: TextStyle(color: Colors.black),
                      )
                    : Text(''),
              ],
            ),
          ),
        ),
        Positioned(
          right: 0,
          top: -9,
          child: Container(
            width: 25,
            decoration: BoxDecoration(
                color: Color(0xFF5679db),
                // borderRadius: ,
                shape: BoxShape.circle),
            child: IconButton(
              padding: EdgeInsets.all(0),
              icon: Icon(
                Icons.close,
                color: Color(0xFFf2f2fa),
                size: 20,
              ),
              onPressed: () {
                setState(() {
                  pinClicked = false;
                });
              },
            ),
          ),
        ),
      ],
    );
  }

  //   print(dropDownItem.length);
  //   return dropDownItem;
  // }

  List<DropdownMenuItem<String>> showDropDown() {
    List<DropdownMenuItem<String>> dropDownItem = [];
    totalCountries.forEach(
      (country) => dropDownItem.add(
        DropdownMenuItem(
          child: Row(
            mainAxisAlignment: MainAxisAlignment.start,
            children: <Widget>[
              // Image.network(
              //   "https://raw.githubusercontent.com/hjnilsson/country-flags/master/png100px/${country["iso2"].toLowerCase()}.png",
              //   width: 20.0,
              //   height: 15.0,
              // ),
              // Text(country[""iso2""]),
              Text(country["name"] != null ? country["name"] : Text('')),
            ],
          ),
          value: country["iso2"] != null ? country["iso2"] : '',
        ),
      ),
    );

    print(dropDownItem.length);
    return dropDownItem;
  }

  final Set gestureRecognizers = [
    Factory(() => EagerGestureRecognizer()),
  ].toSet();

  @override
  Widget build(BuildContext context) {
    return isLoading
        ? SafeArea(
            child: Scaffold(
              backgroundColor: Color(0xfff2f2fa),
              body: Center(
                  child: Image.asset(
                'assets/loadingPage.png',
                height: 180,
                filterQuality: FilterQuality.medium,
                fit: BoxFit.cover,
              )),
            ),
          )
        : SafeArea(
            child: Scaffold(
              backgroundColor: Color(0xFFf2f2fa),
              body: Center(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.start,
                  children: <Widget>[
                    Container(
                      height: 100,
                      child: Row(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: <Widget>[
                          Text('Corona Map',
                              style: TextStyle(
                                  color: Color(0xFF5679DB),
                                  fontWeight: FontWeight.w900,
                                  fontSize: 24)),
                        ],
                      ),
                    ),
                    Divider(
                      color: Color(0xFFd6dcf4),
                    ),
                    DropdownButton<String>(
                      items: showDropDown(),
                      onChanged: (String value) {
                        setState(() {
                          countryName = value;
                        });
                        _getCovidData();
                        _getDetailedData();
                        print(countryName);
                      },
                      hint: Text("Global info"),
                      value: countryName,
                    ),
                    Expanded(
                      child: Card(
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(15.0),
                        ),
                        margin: EdgeInsets.only(
                          left: 6,
                          right: 6,
                          bottom: 6,
                        ),
                        child: Stack(
                          children: <Widget>[
                            //   flutterMap.FlutterMap(
                            //     options: new flutterMap.MapOptions(
                            //       center: detailData.length == 0
                            //           ? latLng.LatLng(51.5, -0.09)
                            //           : latLng.LatLng(
                            //               detailData[0]["lat"].toDouble(),
                            //               detailData[0]["long"].toDouble(),
                            //             ),
                            //       zoom: 1.5,
                            //     ),
                            //     layers: [
                            //       new flutterMap.TileLayerOptions(
                            //         urlTemplate: "https://api.tiles.mapbox.com/v4/"
                            //             "{id}/{z}/{x}/{y}@2x.png?access_token=pk.eyJ1IjoidGhla2V0YW4yIiwiYSI6ImNrODNzbjJhczFkOWEzZnBnY3hvZDEyc3oifQ.Sq0TnHXyfJgodPce7SBlJQ",
                            //         additionalOptions: {
                            //           'accessToken':
                            //               'pk.eyJ1IjoidGhla2V0YW4yIiwiYSI6ImNrODNzbjJhczFkOWEzZnBnY3hvZDEyc3oifQ.Sq0TnHXyfJgodPce7SBlJQ',
                            //           'id': 'mapbox.streets',
                            //         },
                            //       ),
                            //       new flutterMap.MarkerLayerOptions(
                            //         markers: generateMarker(),
                            //       ),
                            //   ],
              //               //  ),
                             GoogleMap(
                               mapType: MapType.normal,
               initialCameraPosition: CameraPosition(target: LatLng(0, 0)),
               //markers: Set<Marker>.of(markers.values),
               markers: Set.from(allMarkers),
               onMapCreated: (GoogleMapController controller) {
                              _controller.complete(controller);}
                             ),
                            pinClicked
                                ? Positioned(
                                    top: 100,
                                    child: showContainer(),
                                  )
                                : Container(),
                          ],
                        ),
                      ),
                    ),
                  ],
                ),
              ),
              floatingActionButton: FloatingActionButton(
                elevation: 0,
                backgroundColor: Color(0xFFf2f2fa),
                onPressed: () {
                  setState(() {
                    countryName = null;
                    pinClicked = false;
                  });
                  _getCovidData();
                  _getDetailedData();
                },
                tooltip: 'Get Data',
                child: Icon(
                  AjayisticIcons.a032_target,
                  color: Color(0xFF5679DB),
                ),
              ),
            ),
          );
  }
}
